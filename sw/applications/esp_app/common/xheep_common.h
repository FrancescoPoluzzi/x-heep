/* xheep_common.h ï¿½ shared between ESP and X-HEEP */
#pragma once
#include <stdint.h>

#include "core_v_mini_mcu.h"
#include "power_manager_regs.h"
#include "soc_ctrl_regs.h"

/* Firmware entry point address - must match linker script __boot_address */
#define XHEEP_FW_ENTRY_POINT 0x180

/* One shared drop location inside X-HEEP RAM for the message */
#define XHEEP_SHARED_STR_OFFSET     0x0001FA00
#define XHEEP_SHARED_STR_MAX         128u

#define XHEEP_SOC_CTRL_WRITE_OFFSET    0x0001FF00
#define XHEEP_POWER_MANAGER_WRITE_OFFSET 0x0001FE00

/* Derived in-X-HEEP addresses (offsets within the X-HEEP aperture) */
#define XHEEP_SHARED_STR_ADDR        (XHEEP_SHARED_STR_OFFSET)

/* CPU enable/disable control (0=hold in reset, 1=allow execution) */
//#define XHEEP_CPU_ENABLE_ADDR        (POWER_MANAGER_START_ADDRESS + POWER_MANAGER_CPU_ENABLE_REG_OFFSET)

/* Reset strobes */
#define XHEEP_MASTER_CPU_FORCE_SWITCH_ON_REG_OFFSET (XHEEP_POWER_MANAGER_WRITE_OFFSET + POWER_MANAGER_MASTER_CPU_FORCE_SWITCH_ON_REG_OFFSET)
#define XHEEP_RAM_0_CLK_GATE_REG_OFFSET (XHEEP_POWER_MANAGER_WRITE_OFFSET + POWER_MANAGER_RAM_0_CLK_GATE_REG_OFFSET)
#define XHEEP_RAM_1_CLK_GATE_REG_OFFSET (XHEEP_POWER_MANAGER_WRITE_OFFSET + POWER_MANAGER_RAM_1_CLK_GATE_REG_OFFSET)
#define XHEEP_RESET_ASSERT_ADDR      (XHEEP_POWER_MANAGER_WRITE_OFFSET + POWER_MANAGER_MASTER_CPU_FORCE_RESET_ASSERT_REG_OFFSET)
#define XHEEP_RESET_DEASSERT_ADDR    (XHEEP_POWER_MANAGER_WRITE_OFFSET + POWER_MANAGER_MASTER_CPU_FORCE_RESET_DEASSERT_REG_OFFSET)

/* Boot ROM control - tells boot ROM to exit loop and jump to BOOT_ADDRESS (default 0x180) */
#define XHEEP_BOOT_EXIT_LOOP_ADDR    (XHEEP_SOC_CTRL_WRITE_OFFSET + SOC_CTRL_BOOT_EXIT_LOOP_REG_OFFSET)
#define XHEEP_BOOT_ADDRESS_ADDR      (XHEEP_SOC_CTRL_WRITE_OFFSET + SOC_CTRL_BOOT_ADDRESS_REG_OFFSET)
#define XHEEP_BOOT_SELECT_ADDR       (XHEEP_SOC_CTRL_WRITE_OFFSET + SOC_CTRL_BOOT_SELECT_REG_OFFSET)

